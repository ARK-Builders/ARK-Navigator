//file:noinspection GroovyConstructorNamedArguments
import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.projectName", "ARK-Navigator"
        property "sonar.projectKey", "ARK-Builders_ARK-Navigator"
        property "sonar.organization", "ark-builders"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

android {
    namespace "dev.arkbuilders.navigator"
    compileSdk 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
        freeCompilerArgs=['-Xjvm-default=all']
    }

    testOptions {
        unitTests.all {
            testLogging {
                outputs.upToDateWhen { false }
                events "passed", "failed", "skipped", "standardError"
                showCauses true
                showExceptions true
            }
        }
    }

    defaultConfig {
        def login = System.getenv("ACRA_LOGIN") ?: ""
        def password = System.getenv("ACRA_PASS") ?: ""
        def uri = System.getenv("ACRA_URI") ?: ""
        def appVersionName = System.getenv("BRANCH_NAME") ?: "1.0"
        applicationId "dev.arkbuilders.navigator"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName appVersionName
        setProperty("archivesBaseName", "ark-navigator")

        buildConfigField "String", "ACRA_LOGIN", "\"$login\""
        buildConfigField "String", "ACRA_PASS", "\"$password\""
        buildConfigField "String", "ACRA_URI", "\"$uri\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        testRelease {
            storeFile project.rootProject.file('./testRelease.jks')
            storePassword "navigator"
            keyAlias "key0"
            keyPassword "navigator"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            manifestPlaceholders = [
                appIcon: "@mipmap/ic_launcher_1",
                appLabel: "@string/app_name_debug"
            ]
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.testRelease
            manifestPlaceholders = [
                appIcon: "@mipmap/ic_launcher_2",
                appLabel: "@string/app_name"
            ]
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }
}

dependencies {
    //For local developments of arklib-android:
    //def arklibVersion = '999'
    def arklibVersion = '0.3.3'

    releaseImplementation "dev.arkbuilders:arklib:$arklibVersion"
    debugImplementation "dev.arkbuilders:arklib-debug:$arklibVersion"
    implementation("dev.arkbuilders:components:0.0.6") {
        exclude group: "dev.arkbuilders", module: "arklib"
    }

    //// For local development, you can inject local AAR dependency:
    // implementation files('/tmp/arklib-android/lib/build/outputs/aar/lib-debug.aar')

    //// But better to use mavenLocal() repo and push the lib into it,
    //// this way you will be able to use debugger on the library code.
    //// See `build.gradle` in the project root.

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.4"
    implementation "androidx.core:core-ktx:1.10.1"
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.constraintlayout:constraintlayout:2.1.1"
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation "androidx.documentfile:documentfile:1.0.1"
    implementation 'com.github.kirich1409:viewbindingpropertydelegate-noreflection:1.5.3'

    implementation 'com.davemorrissey.labs:subsampling-scale-image-view-androidx:3.10.0'
    implementation 'com.github.MikeOrtiz:TouchImageView:3.1.1'

    implementation 'dev.arkbuilders:arkfilepicker:0.1.1'

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-rc01"

    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation "org.orbit-mvi:orbit-viewmodel:4.3.2"

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "com.airbnb.android:lottie:3.4.0"

    implementation "com.github.moxy-community:moxy:2.2.2"
    implementation "com.github.moxy-community:moxy-androidx:2.2.2"
    implementation "com.github.moxy-community:moxy-ktx:2.2.2"
    implementation "com.github.moxy-community:moxy-material:2.2.2"
    kapt "com.github.moxy-community:moxy-compiler:2.2.2"

    implementation "com.google.dagger:dagger:2.42"
    kapt "com.google.dagger:dagger-compiler:2.42"

    implementation "com.google.android.material:material:1.4.0"

    implementation "com.github.bumptech.glide:glide:4.11.0"
    kapt "com.github.bumptech.glide:compiler:4.11.0"

    implementation 'com.github.terrakok:cicerone:v5.0.0'

    implementation "androidx.datastore:datastore-preferences:1.0.0"

    implementation "com.github.barteksc:pdfium-android:1.9.0"

    implementation "ch.acra:acra-http:5.9.3"
    implementation "ch.acra:acra-dialog:5.9.3"

    implementation "com.mikepenz:fastadapter:5.6.0"
    implementation "com.mikepenz:fastadapter-extensions-binding:5.6.0"
    implementation "com.mikepenz:fastadapter-extensions-diff:5.6.0"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "io.mockk:mockk:1.12.3"
    testImplementation "io.mockk:mockk-agent-jvm:1.12.3"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    implementation 'com.github.wseemann:FFmpegMediaMetadataRetriever:1.0.14'

    implementation 'org.apache.tika:tika-core:2.4.0'
    implementation 'com.airbnb.android:lottie:6.1.0'
}

tasks.register('installGitHook', Copy) {
    def suffix = "linux"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        suffix = "windows"
    }
    from new File(rootProject.rootDir, "app/app-scripts/pre-commit-$suffix")
    into { new File(rootProject.rootDir, '.git/hooks') }
    rename("pre-commit-$suffix", 'pre-commit')
    fileMode 0775
}

build.dependsOn installGitHook
