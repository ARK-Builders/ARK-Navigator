//file:noinspection GroovyConstructorNamedArguments
import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "org.sonarqube"

sonarqube {
    properties {
        property "sonar.projectName", "ARK-Navigator"
        property "sonar.projectKey", "ARK-Builders_ARK-Navigator"
        property "sonar.organization", "ark-builders"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.exclusions", "https://sonarcloud.io"
    }
}

android {
    namespace "dev.arkbuilders.navigator"
    compileSdk 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
        freeCompilerArgs=['-Xjvm-default=all']
    }

    testOptions {
        unitTests.all {
            testLogging {
                outputs.upToDateWhen { false }
                events "passed", "failed", "skipped", "standardError"
                showCauses true
                showExceptions true
            }
        }
    }

    defaultConfig {
        def login = System.getenv("ACRA_LOGIN") ?: ""
        def password = System.getenv("ACRA_PASS") ?: ""
        def uri = System.getenv("ACRA_URI") ?: ""
        def appVersionName = System.getenv("BRANCH_NAME") ?: "1.0"
        applicationId "dev.arkbuilders.navigator"
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 1
        versionName appVersionName
        setProperty("archivesBaseName", "ark-navigator")

        buildConfigField "String", "ACRA_LOGIN", "\"$login\""
        buildConfigField "String", "ACRA_PASS", "\"$password\""
        buildConfigField "String", "ACRA_URI", "\"$uri\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        testRelease {
            storeFile project.rootProject.file('./keystore.jks')
            storePassword "sw0rdf1sh"
            keyAlias "ark-builders-test"
            keyPassword "rybamech"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            manifestPlaceholders = [
                appIcon: "@mipmap/ic_launcher_1",
                appLabel: "@string/app_name_debug"
            ]
        }
        release {
            postprocessing {
                removeUnusedCode true
                removeUnusedResources true
                obfuscate false
                optimizeCode true
                proguardFiles 'proguard-rules.pro'
            }
            signingConfig signingConfigs.testRelease
            manifestPlaceholders = [
                appIcon: "@mipmap/ic_launcher_2",
                appLabel: "@string/app_name"
            ]
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }
}

dependencies {
    //For local developments of arklib-android:
    releaseImplementation "dev.arkbuilders:arklib:$ark_lib_version"
    debugImplementation "dev.arkbuilders:arklib-debug:$ark_lib_version"
    implementation("dev.arkbuilders:components:$ark_components_version") {
        exclude group: "dev.arkbuilders", module: "arklib"
    }

    //// For local development, you can inject local AAR dependency:
    // implementation files('/tmp/arklib-android/lib/build/outputs/aar/lib-debug.aar')

    //// But better to use mavenLocal() repo and push the lib into it,
    //// this way you will be able to use debugger on the library code.
    //// See `build.gradle` in the project root.

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
    implementation "org.jetbrains.kotlinx:kotlinx-collections-immutable:$kotlinx_collections_immutable_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.viewpager2:viewpager2:$viewpager_version"
    implementation "androidx.constraintlayout:constraintlayout:$constrain_layout_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$viewmodel_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    implementation "androidx.documentfile:documentfile:$document_file_version"
    implementation "com.github.kirich1409:viewbindingpropertydelegate-noreflection:$viewbindingdelegate_version"

    implementation "com.davemorrissey.labs:subsampling-scale-image-view-androidx:$scale_image_view_androidx_version"
    implementation "com.github.MikeOrtiz:TouchImageView:$touch_image_view_version"

    implementation "dev.arkbuilders:arkfilepicker:$dev_ark_picker_file_version"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$serialization_json_version"

    implementation "com.google.android.flexbox:flexbox:$flexbox_version"

    implementation "org.orbit-mvi:orbit-viewmodel:$orbit_viewmodel_version"

    implementation "com.jakewharton.timber:timber:$timber_version"

    implementation "com.github.moxy-community:moxy:$moxy_version"
    implementation "com.github.moxy-community:moxy-androidx:$moxy_version"
    implementation "com.github.moxy-community:moxy-ktx:$moxy_version"
    implementation "com.github.moxy-community:moxy-material:$moxy_version"
    kapt "com.github.moxy-community:moxy-compiler:$moxy_version"

    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    implementation "com.google.android.material:material:$material_version"

    implementation "com.github.terrakok:cicerone:$cicerone_version"

    implementation "androidx.datastore:datastore-preferences:$datastore_version"

    implementation "com.github.barteksc:pdfium-android:$pdfium_android_version"

    implementation "ch.acra:acra-http:$acra_version"
    implementation "ch.acra:acra-dialog:$acra_version"

    implementation "com.mikepenz:fastadapter:$fastadapter_version"
    implementation "com.mikepenz:fastadapter-extensions-binding:$fastadapter_version"
    implementation "com.mikepenz:fastadapter-extensions-diff:$fastadapter_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "io.mockk:mockk-agent-jvm:$mockk_version"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinx_coroutines_test_version"
    testImplementation "androidx.arch.core:core-testing:$core_testing_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    androidTestImplementation "androidx.test:rules:$test_rule_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    implementation "com.github.wseemann:FFmpegMediaMetadataRetriever:$ffmeg_media_retriever_version"
    implementation "com.github.matomo-org:matomo-sdk-android:$matomo_analytics_version"

    implementation "org.apache.tika:tika-core:$tika_core"
    implementation "com.airbnb.android:lottie:$lottie_version"
}

tasks.register('installGitHook', Copy) {
    def suffix = "linux"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        suffix = "windows"
    }
    from new File(rootProject.rootDir, "app/app-scripts/pre-commit-$suffix")
    into { new File(rootProject.rootDir, '.git/hooks') }
    rename("pre-commit-$suffix", 'pre-commit')
    fileMode 0775
}

build.dependsOn installGitHook
